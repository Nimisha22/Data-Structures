#include <stdio.h>

#define SIZE 10

typedef struct {
    int data[SIZE];
    int front, rear;
} queue;

int size(queue *q) {
    return (q -> rear > q -> front) ? q -> rear - q -> front : SIZE - q -> front + q -> rear;
}

int isFull(queue *q) {
    return (q -> rear + 1) % SIZE == q -> front;
}

int isEmpty(queue *q) {
    return (q -> front == q -> rear) && (q -> rear == -1) ||
        (q -> front - 1) % SIZE == q -> rear;
}

void enqueue(queue *q, int value) {
    if (isFull(q)) {
        printf("The queue is full\n");
        return;
    }
    if (q -> front == -1)
        q -> front = 0;

    q -> rear = (q -> rear + 1) % SIZE;
    q -> data[q -> rear] = value;
}

int dequeue(queue *q) {
    int value = q -> data[q -> front];

    q -> front = (q -> front + 1) % SIZE;
    if ((q -> front - 1) % SIZE == q -> rear)
        q -> front = q -> rear = -1;

    return value;
}

void display(queue *q) {
    int i;
    printf("\nThe queue is ");
    for (i = q -> front; i != q -> rear; i = (i + 1) % SIZE)
        printf("%d ", q -> data[i]);

    printf("%d\n", q -> data[i]);
}

int main() {
    int choice, flag = 0, j;
    queue q = {
        .front = -1,
        .rear = -1};

    printf("Enter 1 to enqueue\n\n");
    printf("Enter 2 to dequeue\n\n");
    printf("Enter 3 to display\n\n");
    printf("Enter 4 to exit\n\n");

   while(flag == 0) {
      printf("\n\nEnter your choice\n");
      scanf("%d", &choice);

      switch(choice) {
        case 1:  printf("\nEnter element to enqueue\n");
                 scanf("%d", &j);
                 enqueue(&q, j);
                 break;

        case 2:  dequeue(&q);
                 break;

        case 3:  display(&q);
                 break;

        case 4:  flag = 1;
                 break;

        default : printf("Wrong choice");

      }
   }
   return 0;
}
