PROBLEM STATEMENT

Write a menu-driven program that maintains a queue of passengers waiting to see a ticket agent. The program user should be able to insert a 
new passenger at the rear of the queue, display the passenger at the front of the queue, or remove the passenger at the front of the queue.  
The program will display the number of passengers left in the queue just before it terminates.

-----------------------------------------------------------------------------------------------------------------------------------------------
CODE

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct Queue {
        int capacity;
        int size;
        int front;
        int rear;
        char **elements;
} Queue;

Queue * createQueue(int maxElements) {
        Queue *Q;
        Q = (Queue *)malloc(sizeof(Queue));
        Q -> elements = (char**) malloc (sizeof(char*)*maxElements);
        Q -> size = 0;
        Q -> capacity = maxElements;
        Q -> front = 0;
        Q -> rear = -1;
        return Q;
}

void Dequeue(Queue *Q) {
        if(Q -> size != 0) {
                Q -> size--;
                Q -> front++;
                if(Q -> front == Q -> capacity)
                         Q -> front = 0;
        }
        return;
}

char* front(Queue *Q) {
        if(Q -> size != 0)
                return Q -> elements[Q -> front];
        return NULL;
}

void Enqueue(Queue *Q , char *element) {
        if(Q -> size == Q -> capacity)
                printf("Queue is Full\n");
        else {
                Q -> size++;
                Q -> rear = Q -> rear + 1;
                /* As we fill the queue in circular fashion */
                if(Q -> rear == Q -> capacity)
                        Q -> rear = 0;
                Q -> elements[Q -> rear] = (char *) malloc((sizeof element + 1)* sizeof(char));
                strcpy(Q -> elements[Q -> rear], element);
        }
        return;
}

int main() {
        Queue *Q = createQueue(5);
        int flag = 1, choice;
        char en[10];

        while(flag == 1) {
        printf("\n\nPlease enter number corresponding to the action you want to perform\n");
        printf("1. Insert new passenger at rear of queue\n");
        printf("2. Display passenger at front of queue\n");
        printf("3. Remove passenger from front of queue\n");
        printf("4. Terminate program\n");

        scanf("\n\n%d", &choice);

        switch(choice){
            case 1: printf("\n\nPlease enter value to enqueue\n");
                    scanf("%s", en);
                    Enqueue(Q, en);
                    break;

            case 2: printf("\n\nFront passenger is %s\n", front(Q));
                    break;

            case 3: printf("%s", front(Q));
                    Dequeue(Q);
                    printf(" dequeued from queue");
                    break;

            case 4: flag = 0;
                    break;

            default: printf("\n\nWrong choice");
        }
    }
}
