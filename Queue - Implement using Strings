PROBLEM STATEMENT

Write a menu-driven program that maintains a queue of passengers waiting to see a ticket agent. The program user should be able to insert a 
new passenger at the rear of the queue, display the passenger at the front of the queue, or remove the passenger at the front of the queue.  
The program will display the number of passengers left in the queue just before it terminates.

-----------------------------------------------------------------------------------------------------------------------------------------------
CODE

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct Queue {
        int capacity;
        int size;
        int front;
        int rear;
        char **elements;
} Queue;


// Creating a Queue
Queue * createQueue(int maxElements) {
        Queue *Q;
        Q = (Queue *) malloc (sizeof(Queue));
        Q -> elements = (char**) malloc (sizeof(char*)*maxElements);
        Q -> size = 0;
        Q -> capacity = maxElements;
        Q -> front = 0;
        Q -> rear = -1;
        return Q;
}


// Function to perform Dequeue operation
void Dequeue(Queue *Q) {
        if(Q -> size != 0) {
                Q -> size--;
                Q -> front++;
                if(Q -> front == Q -> capacity)
                         Q -> front = 0;
        }
        return;
}


// Function to return the first element
char* front(Queue *Q) {
        if(Q -> size != 0)
                return Q -> elements[Q -> front];
        return NULL;
}


// Function to perform Enqueue operation
void Enqueue(Queue *Q , char *element) {
        if(Q -> size == Q -> capacity)
                printf("Queue is Full\n");
        else {
                Q -> size++;
                Q -> rear = Q -> rear + 1;
                //filling the queue in circular fashion
                if(Q -> rear == Q -> capacity)
                        Q -> rear = 0;
                Q -> elements[Q -> rear] = (char *) malloc ((sizeof element + 1)* sizeof(char));
                strcpy(Q -> elements[Q -> rear], element);
        }
        return;
}


// Function to return the size of Queue
int size(Queue *Q) {
    return Q -> size;
}

int main() {
        Queue *Q = createQueue(10);
        int flag = 1, choice;
        char en[10];

        while(flag == 1) {
        printf("\n\nPlease enter number corresponding to the action you want to perform\n");
        printf("1. Insert new passenger at rear of queue\n");
        printf("2. Display passenger at front of queue\n");
        printf("3. Remove passenger from front of queue\n");
        printf("4. Terminate program and display number of passengers left\n");

        scanf("%d", &choice);

        switch(choice){
            case 1: printf("\n\nPlease enter the name of passenger to enqueue\n");
                    getchar();  // By using getchar we retrieve extra \n in the buffer
                    gets(en);
                    Enqueue(Q, en);
                    break;

            case 2: printf("\n\nFront passenger is %s\n", front(Q));
                    break;

            case 3: printf("%s", front(Q));
                    Dequeue(Q);
                    printf(" dequeued from queue");
                    break;

            case 4: flag = 0;
                    printf("\n\nNumber of passengers left is / are %d", size(Q));
                    break;

            default: printf("\n\nWrong choice");
        }
    }
}

--------------------------------------------------------------------------------------------------------------------------------------
OUTPUT

Please enter number corresponding to the action you want to perform
1. Insert new passenger at rear of queue
2. Display passenger at front of queue
3. Remove passenger from front of queue
4. Terminate program and display number of passengers left
1


Please enter the name of passenger to enqueue
Nimisha Doshi


Please enter number corresponding to the action you want to perform
1. Insert new passenger at rear of queue
2. Display passenger at front of queue
3. Remove passenger from front of queue
4. Terminate program and display number of passengers left
1


Please enter the name of passenger to enqueue
Nikita Somani


Please enter number corresponding to the action you want to perform
1. Insert new passenger at rear of queue
2. Display passenger at front of queue
3. Remove passenger from front of queue
4. Terminate program and display number of passengers left
2


Front passenger is Nimisha Doshi


Please enter number corresponding to the action you want to perform
1. Insert new passenger at rear of queue
2. Display passenger at front of queue
3. Remove passenger from front of queue
4. Terminate program and display number of passengers left
3
Nimisha Doshi dequeued from queue

Please enter number corresponding to the action you want to perform
1. Insert new passenger at rear of queue
2. Display passenger at front of queue
3. Remove passenger from front of queue
4. Terminate program and display number of passengers left
2


Front passenger is Nikita Somani


Please enter number corresponding to the action you want to perform
1. Insert new passenger at rear of queue
2. Display passenger at front of queue
3. Remove passenger from front of queue
4. Terminate program and display number of passengers left
4


Number of passengers left is / are 1
Process returned 0 (0x0)   execution time : 42.944 s
Press any key to continue.
