#include <stdlib.h>
#include <stdio.h>
#include <string.h>

struct stack
{
    int top;
    char st[30][30];
}s;

void push(char str[])
{
    if(s.top != 29)
    {
        strcpy(s.st[++s.top], str);
    }
    else
    {
        printf("\nStack overflow. ");
    }
}
void pop(char str[])
{
    if(s.top != -1)
    {
        strcpy(str, s.st[s.top--]);
    }
    else
    {
        printf("\nStack Empty.");
    }
    return(str);
}

void prefixtopostfix(char prefix[])
{
    int n, i;
    n = strlen(prefix);
    char str1[n], str2[n], temp[n], op[2], postfix[n];
    op[1] = '\0';
    for(i=n-1; i>=0; i--)
    {
        if(prefix[i] == '+' || prefix[i] == '-' || prefix[i] == '*' || prefix[i] == '/')
        {
            pop(str1);
            pop(str2);
            op[0] = prefix[i];
            strcpy(temp, str1);
            strcat(temp, str2);
            strcat(temp, op);
            push(temp);
        }
        else
        {
            op[0] = prefix[i];
            push(op);
        }
    }
    pop(postfix);
    printf("\nThe postfix of the entered prefix is: ");
    puts(postfix);
}

int isOp(char x)
{
    if(x == '+' || x == '-' || x == '*' || x == '/')
        return 1;
    return 0;
}

int main()
{
    char str[30], i;
    printf("\nEnter a prefix: ");
    gets(str);
    if(!isOp(str[0]))
    {
        printf("\nThe given expression is not a prefix.");
    }
    else
    {
         prefixtopostfix(str);
    }
}
